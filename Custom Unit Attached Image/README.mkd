# Custom Units

The mashup adds a new "Attachment" custom unit to the Customise Cards tab in a View Setup area. The unit shows the first attached to an entity file as a picture on a card. Only one available line on a card is required to add the unit.


![Attachment unit](https://github.com/TargetProcess/TP3MashupLibrary/raw/master/Custom%20Units/AttachmentUnit.png?raw=true)

The mashup is an example of how to create and add your custom units to the Units Library.

```javascript
{
    id: 'attachment_thumbnail',
    classId: 'tau-board-unit_type_attachment-thumbnail',
    hideIf: function(data) {
        return !data.attachments.length;
    },
    name: 'Attachment thumbnail',
    types: [
        et.FEATURE,
        et.STORY,
        et.TASK,
        et.BUG,
        et.REQUEST,
        et.TEST_CASE,
        et.IMPEDIMENT,
        et.ITERATION,
        et.TEAM_ITERATION,
        et.RELEASE,
        et.TEST_PLAN,
        et.TEST_PLAN_RUN,
        et.BUILD
    ],
    sizes: [sz.XS, sz.S, sz.M, sz.L],
    template: [
        '<div class="tau-board-unit__value"',
        ' style="max-width: 100%; max-height: 100%; width: 100%;">',
          '<img',
            ' style="width: 100%;"',
            ' src="<%! this.data.attachments[0].thumbnailUri',
                '.replace("width=100", "width=200")',
                '.replace("height=200", "height=100") %>',
            '">',
        '</div>'
    ],
    sampleData: {
    attachments: [
        {
            thumbnailUri: helper.url('/Javascript/tau/css/images/icons/users/karat.png?size=')
        }
    ],
    model: 'attachments:attachments.Select({thumbnailUri})'
}
```

The following properties can be used:

* `id` - a unique unit ID
* `classId` - an ID of the css class which will be applied to the unit
* `hideIf` - if a function returns 'true', the unit will be hidden on card
* `name` - a name of a unit in the Library
* `types` - applicable entity types
* `sizes` - applicable card sizes
* `template` - an HTML template of a unit. Targetprocess uses jqote2 [jqote2](http://aefxx.com/api/jqote2-reference/) as a template engine.
* `sampleData` - a json object with sample data, which will be used when a unit is displayed in Library
* `model` - a unit data model
